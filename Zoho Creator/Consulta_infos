// Função responsavel por trazer todos os dados do registro no qual será usado na aplicação do Zoho Creator, para este
// caso estamos pegando dados de uma conta, na qual será criado um orçamento para essa conta, em uma aplicação construida
// do zero.

// variável CPF/CNPJ do Cliente
cpfCnpj = input.cnpjCpfCliente;
// Inserir Razão Social do Cliente pelo seu CNPJ/CPF
if(cpfCnpj != "" && cpfCnpj != null)
{
	map1 = Map();
	map1.put("CNPJ",cpfCnpj);
	conta = zoho.crm.getRecordById("Accounts",input.ID_Conta.toNumber());
	// 	if(conta == {})
	// 	{
	// 		map2 = Map();
	// 		map2.put("CPF",cpfCnpj);
	// 		conta = zoho.crm.searchRecords("Accounts","CPF:equals:" + cpfCnpj.replaceAll("[^a-zA-Z0-9]",""));
	// 	}
	if(conta == {})
	{
		//Mostrar campos de Nome do Contato e Razão Social/Nome
		hide Itens_Cotados;
		hide Nome_Contato;
		hide razaoSocial;
		//Atribuir Razão Social com base no CPF/CNPJ do cliente
		input.razaoSocial = null;
		//input.CEP = null;
		input.Logradouro = null;
		input.Cidade = null;
		// input.Bairro = null;
		input.Complemento = null;
		input.UF = null;
		alert "Conta não encontrada no CRM!";
	}
	if(conta != {})
	{
		conta = conta.get(0);
		//Mostrar campos de Nome do Contato e Razão Social/Nome
		show Itens_Cotados;
		show Nome_Contato;
		show razaoSocial;
		//Atribuir Razão Social com base no CPF/CNPJ do cliente
		input.razaoSocial = conta.get("Account_Name");
		input.ID_Conta = conta.get("id");
		//input.CEP = conta.get("zPlugin_CEP");
		input.Logradouro = conta.get("Billing_Street");
		input.Cidade = conta.get("Billing_City");
		// input.Bairro = conta.get("zPlugin_Bairro");
		input.Complemento = conta.get("zPlugin_Complemento");
		input.UF = conta.get("Billing_State");
		//Precificação
		precificacao = zoho.crm.getRecordById("Precifica_es",5548126000002873808);
		for each  produtoFormulario in input.Itens_Cotados
		{
			if(produtoFormulario.Nome_Produto != null)
			{
				for each  porcentagemProduto in precificacao.get("Porcentagem_dos_Produtos")
				{
					// Escaneia lista de porcentagens e extrai porcentagem do cliente 
					if(conta.get("Porte") == porcentagemProduto.get("Porte"))
					{
						if(conta.get("Tipo_da_Empresa") == "MISTURADORA/DISTRIBUIDORA")
						{
							porcentagem = porcentagemProduto.get("Distribuidora");
						}
						if(conta.get("Tipo_da_Empresa") == "REVENDA")
						{
							porcentagem = porcentagemProduto.get("Revenda");
						}
						if(conta.get("Tipo_da_Empresa") == "PRODUTOR RURAL")
						{
							porcentagem = porcentagemProduto.get("Produtor");
						}
						for each  produtoBase in precificacao.get("Tabela_de_Precifica_o")
						{
							if(produtoFormulario.Nome_Produto == produtoBase.get("Produto").get("id"))
							{
								valorBase = produtoBase.get("Valor_Base");
								valorProduto = valorBase + valorBase * porcentagem / 100;
								produtoFormulario.Preco_Unitario=valorProduto;
							}
						}
						idProduto = toNumber(produtoFormulario.Nome_Produto);
						produto = zoho.crm.getRecordById("Products",idProduto);
						for each  imposto in produto.get("Imposto_de_ICMS")
						{
							if(imposto.get("UF") == conta.get("Billing_State"))
							{
								produtoFormulario.ICMS=imposto.get("ICMS_BRL");
							}
						}
					}
				}
			}
		}
	}
}
else
{
	//Mostrar campos de Nome do Contato e Razão Social/Nome
	hide Itens_Cotados;
	hide Nome_Contato;
	hide razaoSocial;
	//Atribuir Razão Social com base no CPF/CNPJ do cliente
	cpfCnpj = null;
	input.razaoSocial = null;
	//input.CEP = null;
	input.Logradouro = null;
	input.Cidade = null;
	// input.Bairro = null;
	input.Complemento = null;
	input.UF = null;
	clear Nome_Contato;
}
